inputs:
  vmflavor:
    type: string
    title: Size
    default: small
    enum:
      - tiny
      - small
      - medium
  vmnet:
    type: string
    title: Network
    enum:
      - vmnet1
      - vmnet2
      - vmnet3
    default: vmnet2
  vmnotes:
    type: string
    title: Notes
    default: Deployed by vRA
  vmuser:
    type: string
    title: Username
    default: henk
  vmpass:
    type: string
    title: Password
    encrypted: true
    default: VMware01!
  vmimage:
    type: string
    title: Image
    oneOf:
      - title: Photon4
        const: 'http://192.168.1.10/ISO/Linux/photon-ova_uefi-4.0-ca7c9e9330.ova'
      - title: Photon4-CL
        const: Linux / photon-ova_uefi-4.0-ca7c9e9330
    default: 'http://192.168.1.10/ISO/Linux/photon-ova_uefi-4.0-ca7c9e9330.ova'
  vmCount:
    type: integer
    title: Number of VMs
    minimum: 1
    maximum: 3
    default: 1
  pgDeploy:
    type: object
    title: Deployment Properties
    $ref: /ref/property-groups/pgDeploy
resources:
  VM:
    type: Cloud.vSphere.Machine
    metadata:
      layoutPosition:
        - 0
        - 0
    properties:
      name: '${propgroup.pgGuestOS.linux + input.pgDeploy.vmEnvironment + input.pgDeploy.vmServertype + input.pgDeploy.vmLocationcode}'
      imageRef: '${input.vmimage}'
      customizationSpec: cs_linux_default
      flavor: '${input.vmflavor}'
      count: '${input.vmCount}'
      ignoreActiveDirectory: true
      vmnotes: '${input.vmnotes}'
      remoteAccess:
        authentication: usernamePassword
        username: '${input.vmuser}'
        password: '${input.vmpass}'
      networks:
        - network: '${resource.Network.id}'
          assignment: dynamic
      tags:
        - key: vraserver
          value: 'true'
        - key: ServerType
          value: '${input.pgDeploy.vmServerType}'
  Network:
    type: Cloud.vSphere.Network
    metadata:
      layoutPosition:
        - 1
        - 0
    properties:
      networkType: existing
      constraints:
        - tag: 'vmnet:${input.vmnet}'
